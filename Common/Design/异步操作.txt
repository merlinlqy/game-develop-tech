这里只介绍使用最最传统的使用C++如何在游戏开发中进行异步操作。

异步处理的意思是，发送一个请求，该请求接口本身会立即返回，当处理逻辑结束以后，调用传进去的回调函数。

因此，调用者必须认为这个请求本身不会做任何处理，要在回调函数callback之后才是真正处理完逻辑。

一个简单的异步处理请求为：
asyncRequest(data, callback)

因此，所有的异步处理均可简单的改写成同步处理。也就一直等待，直到callback调用为止。


异步会发生在跨进程，跨线程，跨协程中。

异步应用场景非常之多，基本都是因为CPU/GPU的速度与请求之间的速度不匹配导致。异步的目的是让出CPU资源，等处理完以后再继续处理。
例如文件读写，网络传输，数据库读写等。

正因为是异步处理，因此callback的处理将要考虑生命周期问题。到callback被回调以后，各种对象是否存在。
现代C++虽然可以用shared_ptr进行一定包装，但是也仅仅是为了防止野指针而已。
而更多的是逻辑上的处理，例如callback之后，该玩家是否在线，这时候的玩家状态是否还是符合操作的状态等。



