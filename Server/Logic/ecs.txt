ECS=Entity,Component,System
ECS是一种设计模式，把整个游戏当成ECS来进行设计和开发。

ECS是从传统的继承和重载的方式，转化成组合的方式。
Entity就是实体，可以认为游戏所有的对象都是实体（玩家，NPC，场景互动物品等）
然后Component就是组件，可以认为各种数据（属性，例如坐标，速度，朝向等）
Component是挂在Entity之上的，因此，Entity通过组合Component的方式来实现逻辑。

不管Entity还是Component，都是“数据”，那么System就是把这些数据处理起来，或者连通起来，system是处理各种逻辑的系统。

从实现细节上，例如Player，也有可能是一个Entity，也有可能是Component（例如某个子弹的创造者），所以应该是既有Player这个Entity，也有一个Player的Component。
Player的Component是指向Player这个Entity。

ECS从设计上就与传统的设计不一样，采取数据驱动的方式。

Unity本身就是具有EC方式，但是还没有引入System概念。
而DOTS才是正式的Unity的ECS系统，其目的是让更新并行化。


ECS逐步引入视野是因为暴雪的守望先锋采取了这样的设计。
当然，ECS必然解决了一些传统方式的缺点，例如移动，以前的方式可能需要把所有的对象的移动实现一遍。但是对于ECS就是一个Component的问题。
解决了一些问题，同时也会引入一些问题，有些传统设计里面很简单的事情到了ECS将会变成非常复杂，或者完全不符合设计理念。



