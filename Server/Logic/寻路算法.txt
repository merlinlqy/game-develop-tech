在有地图的场景下，就会有寻路算法。

抽象成算法问题就是在一个二维（也有可能三维，算法思想通用）的平面上，存在各种异构障碍物，同时上面会有各种传送点。问题简单概括就是从A到B的最短路径。

最短路径的算法很多，效率都很高。寻路一般需要实现的是如何进行剪枝（不可能相邻的点都作为边）。因此都会采取关键路径点的方式。

点：起点，终点，障碍物的拐点，传送点等
线：各个点之间的连线

而除了起点和终点以外，其他的关键点已知，而且相对静态，所以可以预先生成。

所以最后都会简化成起点到最近关键点和终点到关键单的最短路径。

而对于有动态阻挡的问题，其实也是可以抽象成类似的问题，只是要做好cache，不能稍微移动就更新，而是采取定期的更新的方式来减少运算量。



