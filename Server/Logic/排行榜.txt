游戏里面会有各种排行榜。

对于少于100个的情况则可以使用简单的方式。

对于少于10000个的情况则可以选择快排。

而对于更多的排行榜，则会做一定的优化。现在手游一般都会采取全服排名的方式，而全服排名一般都会达到百万级，而百万级则不能进行实时排序。

对于玩家来说，一般都只给查看前100名玩家，然后本人采取预估的方式。

这里有很多优化方式，例如更新排名的时候，采取链表插入，而非实际重排。所有的结果都做一定的cache（一般单一服务器在线玩家不会到万级，更新频率不会很高），定期刷新。

对于排行榜，一般只有更新，增加，查询这三个接口。

而对于更高量级的排序，会采取两层桶或者三层桶的方式。也就是先对高位做截断，做一层桶，然后留下低位做两层桶。
这样对于数量级到亿级的更新效率也是非常高的（近似O(log(N))计算量 ）。
但是这时候要考虑使用到外部存储，而数据库存储的耗时也是需要考虑，所以也会带上一层cache。



另一种做法是用Redis的zset，相信也有很多游戏在用。简单说zset通过dict和skiplist来保证查询更新都是O(log(N))复杂度。通过dict从玩家ID找到分数，然后通过skiplist找到玩家排名。有兴趣的直接t_zset.c看起来。如果只想看skiplist的实现，前面500行就够了。

