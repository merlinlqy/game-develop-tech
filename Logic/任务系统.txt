任务系统可以分成两类，一次性和周期性。

不管哪一类，都需要一定的条件触发，例如点NPC，当天第一次登录，完成链状任务之后。

因此很多任务系统都是结合事件系统来处理。

任务一般需要提供以下接口：
接受任务accept_mission
更新任务update_mission
完成任务finish_mission
取消任务cancel_mission



任务本身可能需要记录一些数据（例如打了多少个敌人，开了多少个宝箱），而因为玩家一般都会很多，因此一般都会把任务数据记录到玩家身上。
如player.data.mission[mission_id]

对于那种周期性任务，接受任务建议实现方式采取在线玩家统一派发（分批），然后其他不在线玩家在登录的时候才派发任务的方式。
同样的，更新任务也是在数据更新的时候才去更新，而且更新数据要小心避免递归死循环（update mission中调用update mission）。

完成任务和取消任务也是需要根据具体任务情况，保存适当的任务数据，防止重复刷任务或者脏数据出现。

所以更好的实现方式是有一个通用的任务模板，把一些基本逻辑完成，然后根据具体的不同任务（一般都是一个任务一个类/文件）进行覆盖来实现具体逻辑。



